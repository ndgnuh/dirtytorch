from os import path
from typing import Optional, Union
from dataclasses import dataclass
from pprint import pprint
from functools import lru_cache
import json

thisdir = path.dirname(__file__)


@lru_cache
def list_snippets():
    with open(path.join(thisdir, "snippets.json")) as f:
        snips = json.load(f)
        for name, snip in snips.items():
            snip[name] = name
        return snips


def get_snippet(name, output_file: Optional[Union[bool, str]] = None):
    file = path.join(thisdir, list_snippets()[name].file)

    with open(file, encoding="utf-8") as f:
        content = f.read()
        content = "\n".join([
            "# Generated by dirtytorch",
            content
        ])

    if output_file is True:
        output_file = path.basename(file)

    if output_file is not None:
        with open(output_file, "w", encoding="utf-8") as f:
            f.write(content)
    return content
